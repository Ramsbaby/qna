{"version":3,"sources":["reportWebVitals.js","pages/table/CommonTable.js","pages/table/CommonTableColumn.js","pages/table/CommonTableRow.js","pages/post/PostList.js","pages/post/PostMain.js","pages/post/PostView.js","pages/post/PostRegist.js","pages/Home.js","pages/login/Login.js","pages/login/SignUp.js","App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","CommonTable","props","headersName","children","className","map","item","index","CommonTableColumn","CommonTableRow","PostList","useState","dataList","setDataList","userInfo","JSON","parse","localStorage","getItem","console","log","isCounselorExistAlert","alert","useEffect","getInquerysList","axios","get","response","data","catch","Error","onClick","removeItem","history","push","id","userId","to","pathname","state","title","content","counselorId","createdAt","updatedAt","param","inqueryId","window","confirm","patch","conselorId","headers","PostMain","PostView","location","match","setData","params","no","align","goBack","PostRegist","Home","Login","setUserId","userPw","setUserPw","onClickLogin","post","password","success","setItem","stringify","error","message","value","onChange","e","target","type","onKeyPress","event","keyCode","SignUp","username","setUserName","userPassword","setUserPassword","userPasswordCheck","setUserPasswordCheck","isIdError","setIsIdError","isPassWordError","setIsPassWordError","isPassWordCheckError","setIsPassWordCheckError","onClickSignUpBtn","a","idRegex","RegExp","passwordRegex","test","name","role","onSubmit","App","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8f038983.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\r\nimport \"./CommonTable.css\";\r\n\r\nconst CommonTable = (props) => {\r\n  const { headersName, children } = props;\r\n\r\n  return (\r\n    <table className=\"common-table\">\r\n      <thead>\r\n        <tr>\r\n          {headersName.map((item, index) => {\r\n            return (\r\n              <td className=\"common-table-header-column\" key={index}>\r\n                {item}\r\n              </td>\r\n            );\r\n          })}\r\n        </tr>\r\n      </thead>\r\n      <tbody>{children}</tbody>\r\n    </table>\r\n  );\r\n};\r\n\r\nexport default CommonTable;\r\n","import React from \"react\";\r\n\r\nconst CommonTableColumn = ({ children }) => {\r\n  return <td className=\"common-table-column\">{children}</td>;\r\n};\r\n\r\nexport default CommonTableColumn;\r\n","import React from \"react\";\r\n\r\nconst CommonTableRow = ({ children }) => {\r\n  return <tr className=\"common-table-row\">{children}</tr>;\r\n};\r\n\r\nexport default CommonTableRow;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport CommonTable from \"../../pages/table/CommonTable\";\r\nimport CommonTableColumn from \"../../pages/table/CommonTableColumn\";\r\nimport CommonTableRow from \"../../pages/table/CommonTableRow\";\r\nimport axios from \"axios\";\r\nimport \"./Post.css\";\r\n\r\nconst PostList = (props) => {\r\n  const [dataList, setDataList] = useState([]);\r\n\r\n  const userInfo = JSON.parse(localStorage.getItem(\"userInfo\"));\r\n\r\n  console.log(userInfo);\r\n\r\n  //상담사 지정\r\n  const togglePopup = (param, event) => {\r\n    if (window.confirm(\"해당 문의글의 지정 상담사로 선택하시겠습니까?\")) {\r\n      axios\r\n        .patch(\r\n          `http://localhost:8000/api/inqueryChoice/${param.inqueryId}`,\r\n          {\r\n            inqueryId: param.inqueryId,\r\n            conselorId: userInfo.id,\r\n          },\r\n          {\r\n            headers: {\r\n              \"X-USER-ID\": userInfo.id,\r\n            },\r\n          }\r\n        )\r\n        .then((response) => {\r\n          getInquerysList();\r\n        })\r\n        .catch((Error) => {\r\n          console.log(Error);\r\n        });\r\n    } else {\r\n    }\r\n  };\r\n\r\n  //이미 지정된 상담사 클릭\r\n  const isCounselorExistAlert = () => {\r\n    alert(\"이미 담당자가 지정된 문의건입니다.\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    getInquerysList();\r\n  }, []);\r\n\r\n  const getInquerysList = () => {\r\n    axios\r\n      .get(\"http://localhost:8000/api/getInquerys\")\r\n      .then((response) => {\r\n        setDataList(response.data.response);\r\n      })\r\n      .catch((Error) => {\r\n        console.log(Error);\r\n      });\r\n  };\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem(\"userInfo\");\r\n    props.props.history.push(\"/\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <button className=\"logoutBtn\" onClick={logout}>\r\n        {userInfo == null ? `메인화면으로` : `로그아웃`}\r\n      </button>\r\n      <div className=\"title\">\r\n        고객 문의 목록 {userInfo === null ? `(고객 전용)` : `(상담사 전용)`}\r\n      </div>\r\n      <CommonTable\r\n        headersName={[\r\n          \"글번호\",\r\n          \"고객ID\",\r\n          \"제목\",\r\n          \"상담사ID\",\r\n          \"등록일\",\r\n          \"답변등록\",\r\n        ]}\r\n      >\r\n        {dataList\r\n          ? dataList.map((item, index) => {\r\n              return (\r\n                <CommonTableRow key={index}>\r\n                  <CommonTableColumn>{item.id}</CommonTableColumn>\r\n                  <CommonTableColumn>{item.userId}</CommonTableColumn>\r\n                  <CommonTableColumn>\r\n                    <Link\r\n                      to={{\r\n                        pathname: `/PostView`,\r\n                        state: {\r\n                          userId: item.userId,\r\n                          title: item.title,\r\n                          content: item.content,\r\n                          counselorId: item.counselorId,\r\n                          createdAt: item.createdAt,\r\n                          updatedAt: item.updatedAt,\r\n                        },\r\n                      }}\r\n                    >\r\n                      {item.title}\r\n                    </Link>\r\n                  </CommonTableColumn>\r\n                  <CommonTableColumn>\r\n                    {item.counselorId == null ? (\r\n                      <button\r\n                        onClick={() =>\r\n                          togglePopup({\r\n                            inqueryId: item.id,\r\n                          })\r\n                        }\r\n                      >\r\n                        없음\r\n                      </button>\r\n                    ) : (\r\n                      <div onClick={isCounselorExistAlert}>\r\n                        {item.counselorId}\r\n                      </div>\r\n                    )}\r\n                  </CommonTableColumn>\r\n                  <CommonTableColumn>{item.createdAt}</CommonTableColumn>\r\n                  <CommonTableColumn>\r\n                    {userInfo !== null && item.counselorId === userInfo.id ? (\r\n                      <Link\r\n                        to={{\r\n                          pathname: `/PostRegist`,\r\n                          state: {\r\n                            userId: item.userId,\r\n                            title: item.title,\r\n                            content: item.content,\r\n                            counselorId: item.counselorId,\r\n                            createdAt: item.createdAt,\r\n                            updatedAt: item.updatedAt,\r\n                          },\r\n                        }}\r\n                      >\r\n                        등록\r\n                      </Link>\r\n                    ) : (\r\n                      `등록불가`\r\n                    )}\r\n                  </CommonTableColumn>\r\n                </CommonTableRow>\r\n              );\r\n            })\r\n          : \"\"}\r\n      </CommonTable>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PostList;\r\n","import React from \"react\";\r\nimport PostList from \"./PostList\";\r\n\r\nconst PostMain = (props) => {\r\n  return (\r\n    <>\r\n      <PostList props={props} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PostMain;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { getPostByNo } from \"../../Data\";\r\nimport \"./Post.css\";\r\n\r\nconst PostView = ({ history, location: { state }, match }) => {\r\n  const [data, setData] = useState({});\r\n  const { userId, title, content, counselorId, createdAt, updatedAt } = state;\r\n\r\n  const { no } = match.params;\r\n\r\n  console.log(match);\r\n\r\n  useEffect(() => {\r\n    setData(state);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <h2 align=\"center\">게시글 상세정보</h2>\r\n\r\n      <div className=\"post-view-wrapper\">\r\n        {data ? (\r\n          <>\r\n            <div className=\"post-view-row\">\r\n              <label>게시글 번호</label>\r\n              <label>{data.id}</label>\r\n            </div>\r\n            <div className=\"post-view-row\">\r\n              <label>제목</label>\r\n              <label>{data.title}</label>\r\n            </div>\r\n            <div className=\"post-view-row\">\r\n              <label>작성자 ID</label>\r\n              <label>{data.userId}</label>\r\n            </div>\r\n            <div className=\"post-view-row\">\r\n              <label>상담사 ID</label>\r\n              <label>{data.counselorId}</label>\r\n            </div>\r\n            <div className=\"post-view-row\">\r\n              <label>작성일</label>\r\n              <label>{data.createdAt}</label>\r\n            </div>\r\n            <div className=\"post-view-row\">\r\n              <label>내용</label>\r\n              <div>{data.content}</div>\r\n            </div>\r\n          </>\r\n        ) : (\r\n          \"해당 게시글을 찾을 수 없습니다.\"\r\n        )}\r\n        <button\r\n          className=\"post-view-go-list-btn\"\r\n          onClick={() => history.goBack()}\r\n        >\r\n          목록으로 돌아가기\r\n        </button>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PostView;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./Post.css\";\r\n\r\nconst PostRegist = ({ history, location: { state }, match }) => {\r\n  const [data, setData] = useState({});\r\n  const { userId, title, content, counselorId, createdAt, updatedAt } = state;\r\n\r\n  const { no } = match.params;\r\n\r\n  console.log(match);\r\n\r\n  useEffect(() => {\r\n    setData(state);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <h2 align=\"center\">게시글 작성</h2>\r\n\r\n      <div className=\"post-view-wrapper\">\r\n        {data ? (\r\n          <>\r\n            <div className=\"post-view-row\">\r\n              <label>게시글 번호</label>\r\n              <label>{data.id}</label>\r\n            </div>\r\n            <div className=\"post-view-row\">\r\n              <label>제목</label>\r\n              <label>{data.title}</label>\r\n            </div>\r\n            <div className=\"post-view-row\">\r\n              <label>작성자 ID</label>\r\n              <label>{data.userId}</label>\r\n            </div>\r\n            <div className=\"post-view-row\">\r\n              <label>상담사 ID</label>\r\n              <label>{data.counselorId}</label>\r\n            </div>\r\n            <div className=\"post-view-row\">\r\n              <label>작성일</label>\r\n              <label>{data.createdAt}</label>\r\n            </div>\r\n            <div className=\"post-view-row\">\r\n              <label>내용</label>\r\n              <div>{data.content}</div>\r\n            </div>\r\n          </>\r\n        ) : (\r\n          \"해당 게시글을 찾을 수 없습니다.\"\r\n        )}\r\n        <button\r\n          className=\"post-view-go-list-btn\"\r\n          onClick={() => history.goBack()}\r\n        >\r\n          목록으로 돌아가기\r\n        </button>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PostRegist;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Home.css\";\r\nconst Home = (props) => {\r\n  return (\r\n    <>\r\n      <button\r\n        className=\"customerBtn\"\r\n        onClick={() => props.history.push(\"/postMain\")}\r\n      >\r\n        고객\r\n      </button>\r\n      <button\r\n        className=\"consultantBtn\"\r\n        onClick={() => props.history.push(\"/login\")}\r\n      >\r\n        상담사\r\n      </button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./Login.css\";\nimport axios from \"axios\";\n\nconst Login = (props) => {\n  const [userId, setUserId] = useState(\"\");\n  const [userPw, setUserPw] = useState(\"\");\n\n  const onClickLogin = () => {\n    console.log(props);\n\n    axios\n      .post(\" http://localhost:8000/api/userLogin\", {\n        id: userId,\n        password: userPw,\n      })\n      .then((response) => {\n        console.log(response);\n        if (response.data.success) {\n          alert(\"로그인 성공\");\n          localStorage.setItem(\n            \"userInfo\",\n            JSON.stringify(response.data.response)\n          );\n          props.history.push(\"/postMain\");\n        } else {\n          alert(response.data.error.message);\n        }\n      })\n      .catch((Error) => {\n        if (!Error.response.data.success) {\n          alert(Error.response.data.error.message);\n        }\n      });\n  };\n\n  const onClickSignUpBtn = () => {\n    console.log(props);\n    props.history.push(\"/signUp\");\n  };\n\n  const onChangeUserId = (e) => {\n    setUserId(e.target.value);\n  };\n\n  const onChangeUserPw = (e) => {\n    setUserPw(e.target.value);\n  };\n\n  const enterkey = () => {\n    if (window.event.keyCode == 13) {\n      // 엔터키가 눌렸을 때 실행할 내용\n      onClickLogin();\n    }\n  };\n  return (\n    <div className=\"loginpage\">\n      <h2>로그인</h2>\n      <div>\n        아이디 :{\" \"}\n        <input className=\"inputId\" value={userId} onChange={onChangeUserId} />\n      </div>\n      <div>\n        비밀번호 :{\" \"}\n        <input\n          className=\"inputPw\"\n          type=\"password\"\n          value={userPw}\n          onChange={onChangeUserPw}\n          onKeyPress={enterkey}\n        />\n      </div>\n      <button className=\"loginBtn\" onClick={onClickLogin}>\n        로그인\n      </button>\n      <button className=\"signUpBtn\" onClick={onClickSignUpBtn}>\n        회원가입\n      </button>\n    </div>\n  );\n};\n\nexport default Login;\n","import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport \"./SignUp.css\";\n\nconst SignUp = (props) => {\n  const [userId, setUserId] = useState(\"\");\n  const [username, setUserName] = useState(\"\");\n  const [userPassword, setUserPassword] = useState(\"\");\n  const [userPasswordCheck, setUserPasswordCheck] = useState(\"\");\n  const [isIdError, setIsIdError] = useState(false);\n  const [isPassWordError, setIsPassWordError] = useState(false);\n  const [isPassWordCheckError, setIsPassWordCheckError] = useState(false);\n\n  const onChangeId = (e) => {\n    setUserId(e.target.value);\n  };\n  const onChangeUserName = (e) => {\n    setUserName(e.target.value);\n  };\n\n  const onChangePassword = (e) => {\n    setUserPassword(e.target.value);\n  };\n  const onChangePasswordCheck = (e) => {\n    setUserPasswordCheck(e.target.value);\n  };\n\n  const onClickCancelBtn = () => {\n    props.history.push(\"/login\");\n  };\n\n  const onClickSignUpBtn = async () => {\n    setIsIdError(false);\n    setIsPassWordError(false);\n    setIsPassWordCheckError(false);\n\n    const idRegex = new RegExp(\"^[a-zA-Z0-9]{4,12}$\");\n    const passwordRegex = new RegExp(\"^(?=.*[0-9])(?=.*[a-zA-z]).{8,15}$\");\n    console.log(userId);\n    if (!idRegex.test(userId)) {\n      setIsIdError(true);\n      console.log(userId);\n      return;\n    }\n\n    if (!passwordRegex.test(userPassword)) {\n      setIsPassWordError(true);\n      return;\n    }\n\n    if (userPassword !== userPasswordCheck) {\n      setIsPassWordCheckError(true);\n      return;\n    }\n\n    axios\n      .post(\" http://localhost:8000/api/user\", {\n        id: userId,\n        name: username,\n        role: \"C\",\n        password: userPassword,\n      })\n      .then((response) => {\n        console.log(response);\n        if (response.data.success) {\n          alert(\"회원가입이 완료되었습니다.\");\n          props.history.push(\"/login\");\n        } else {\n          alert(response.data.error.message);\n        }\n      })\n      .catch((Error) => {\n        if (!Error.response.data.success) {\n          alert(Error.response.data.error.message);\n        }\n      });\n  };\n\n  const handleSubmit = () => {\n    console.log(\"handlesubmit\");\n  };\n\n  return (\n    <div className=\"signuppage\">\n      <h2>회원가입</h2>\n      <form onSubmit={handleSubmit}>\n        <div>\n          아이디 <input value={userId} onChange={onChangeId} />\n        </div>\n        {isIdError ? (\n          <span className=\"redText\">\n            아이디는 4~12자의 영문 대소문자와 숫자로만 입력해 주세요.\n          </span>\n        ) : (\n          <></>\n        )}\n        <div>\n          닉네임\n          <input value={username} onChange={onChangeUserName} />\n        </div>\n        <div>\n          비밀번호{\" \"}\n          <input\n            type=\"password\"\n            value={userPassword}\n            onChange={onChangePassword}\n          />\n        </div>\n        {isPassWordError ? (\n          <span className=\"redText\">\n            비밀번호는 영문, 숫자 조합으로 8~15자리로 입력해 주세요.\n          </span>\n        ) : (\n          <></>\n        )}\n        <div>\n          비밀번호 확인{\" \"}\n          <input\n            type=\"password\"\n            value={userPasswordCheck}\n            onChange={onChangePasswordCheck}\n          />\n        </div>\n        {isPassWordCheckError ? (\n          <span className=\"redText\">비밀번호가 일치하지 않습니다.</span>\n        ) : (\n          <></>\n        )}\n      </form>\n\n      <button className=\"cancelBtn\" onClick={onClickCancelBtn}>\n        취소\n      </button>\n      <button className=\"signupBtn\" onClick={onClickSignUpBtn}>\n        회원가입\n      </button>\n    </div>\n  );\n};\n\nexport default SignUp;\n","//App.js\r\nimport React from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\nimport PostMain from \"./pages/post/PostMain\";\r\nimport PostView from \"./pages/post/PostView\";\r\nimport PostRegist from \"./pages/post/PostRegist\";\r\nimport Home from \"./pages/Home\";\r\nimport Login from \"./pages/login/Login\";\r\nimport SignUp from \"./pages/login/SignUp\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n        <Route exact path=\"/\" component={Home} />\r\n        <Route exact path=\"/login\" component={Login} />\r\n        <Route exact path=\"/signUp\" component={SignUp} />\r\n        <Route exact path=\"/postMain\" component={PostMain} />\r\n        <Route exact path=\"/postView\" component={PostView} />\r\n        <Route exact path=\"/postRegist\" component={PostRegist} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\nreportWebVitals();\n"],"sourceRoot":""}