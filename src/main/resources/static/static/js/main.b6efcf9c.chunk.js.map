{"version":3,"sources":["reportWebVitals.js","pages/table/CommonTable.js","pages/table/CommonTableColumn.js","pages/table/CommonTableRow.js","pages/post/PostMainCounselor.js","pages/post/PostMainCustomer.js","pages/post/PostView.js","pages/post/PostRegistCounselor.js","pages/post/PostRegistCustomer.js","pages/Home.js","pages/login/Login.js","pages/login/SignUp.js","App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","CommonTable","props","headersName","children","className","map","item","index","CommonTableColumn","CommonTableRow","PostMainCounselor","useState","dataList","setDataList","userInfo","JSON","parse","localStorage","getItem","isCounselorExistAlert","alert","useEffect","getInquerysList","axios","get","response","data","catch","Error","console","log","onClick","removeItem","history","push","id","userId","to","pathname","state","title","content","counselorId","createdAt","updatedAt","param","inqueryId","window","confirm","patch","conselorId","headers","PostMainCustomer","logout","isAnswered","PostView","location","match","setData","params","no","align","goBack","PostRegistCounselor","setTitle","setContent","value","onChange","e","target","post","success","error","message","PostRegistCustomer","setUserId","Home","Login","userPw","setUserPw","onClickLogin","password","setItem","stringify","type","onKeyPress","event","keyCode","SignUp","username","setUserName","userPassword","setUserPassword","userPasswordCheck","setUserPasswordCheck","isIdError","setIsIdError","isPassWordError","setIsPassWordError","isPassWordCheckError","setIsPassWordCheckError","onClickSignUpBtn","a","idRegex","RegExp","passwordRegex","test","name","role","onSubmit","App","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b6efcf9c.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\r\nimport \"./CommonTable.css\";\r\n\r\nconst CommonTable = (props) => {\r\n  const { headersName, children } = props;\r\n\r\n  return (\r\n    <table className=\"common-table\">\r\n      <thead>\r\n        <tr>\r\n          {headersName.map((item, index) => {\r\n            return (\r\n              <td className=\"common-table-header-column\" key={index}>\r\n                {item}\r\n              </td>\r\n            );\r\n          })}\r\n        </tr>\r\n      </thead>\r\n      <tbody>{children}</tbody>\r\n    </table>\r\n  );\r\n};\r\n\r\nexport default CommonTable;\r\n","import React from \"react\";\r\n\r\nconst CommonTableColumn = ({ children }) => {\r\n  return <td className=\"common-table-column\">{children}</td>;\r\n};\r\n\r\nexport default CommonTableColumn;\r\n","import React from \"react\";\r\n\r\nconst CommonTableRow = ({ children }) => {\r\n  return <tr className=\"common-table-row\">{children}</tr>;\r\n};\r\n\r\nexport default CommonTableRow;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport CommonTable from \"../table/CommonTable\";\r\nimport CommonTableColumn from \"../table/CommonTableColumn\";\r\nimport CommonTableRow from \"../table/CommonTableRow\";\r\nimport axios from \"axios\";\r\nimport \"./Post.css\";\r\n\r\nconst PostMainCounselor = (props) => {\r\n  const [dataList, setDataList] = useState([]);\r\n\r\n  const userInfo = JSON.parse(localStorage.getItem(\"userInfo\"));\r\n\r\n  //상담사 지정\r\n  const togglePopup = (param, event) => {\r\n    if (window.confirm(\"해당 문의글의 지정 상담사로 선택하시겠습니까?\")) {\r\n      axios\r\n        .patch(\r\n          `http://localhost:8000/api/inqueryChoice/${param.inqueryId}`,\r\n          {\r\n            inqueryId: param.inqueryId,\r\n            conselorId: userInfo.id,\r\n          },\r\n          {\r\n            headers: {\r\n              \"X-USER-ID\": userInfo.id,\r\n            },\r\n          }\r\n        )\r\n        .then((response) => {\r\n          getInquerysList();\r\n        })\r\n        .catch((Error) => {\r\n          console.log(Error);\r\n        });\r\n    } else {\r\n    }\r\n  };\r\n\r\n  //이미 지정된 상담사 클릭\r\n  const isCounselorExistAlert = () => {\r\n    alert(\"이미 담당자가 지정된 문의건입니다.\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    getInquerysList();\r\n  }, []);\r\n\r\n  const getInquerysList = () => {\r\n    axios\r\n      .get(\"http://localhost:8000/api/getInquerys\")\r\n      .then((response) => {\r\n        setDataList(response.data.response);\r\n      })\r\n      .catch((Error) => {\r\n        console.log(Error);\r\n      });\r\n  };\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem(\"userInfo\");\r\n    props.history.push(\"/\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <button className=\"logoutBtn\" onClick={logout}>\r\n        로그아웃\r\n      </button>\r\n      <div className=\"title\">고객 문의 목록 (상담사 전용)</div>\r\n      <CommonTable\r\n        headersName={[\r\n          \"글번호\",\r\n          \"고객ID\",\r\n          \"제목\",\r\n          \"상담사ID\",\r\n          \"등록일\",\r\n          \"답변등록\",\r\n        ]}\r\n      >\r\n        {dataList\r\n          ? dataList.map((item, index) => {\r\n              return (\r\n                <CommonTableRow key={index}>\r\n                  <CommonTableColumn>{item.id}</CommonTableColumn>\r\n                  <CommonTableColumn>{item.userId}</CommonTableColumn>\r\n                  <CommonTableColumn>\r\n                    <Link\r\n                      to={{\r\n                        pathname: `/PostView`,\r\n                        state: {\r\n                          userId: item.userId,\r\n                          title: item.title,\r\n                          content: item.content,\r\n                          counselorId: item.counselorId,\r\n                          createdAt: item.createdAt,\r\n                          updatedAt: item.updatedAt,\r\n                        },\r\n                      }}\r\n                    >\r\n                      {item.title}\r\n                    </Link>\r\n                  </CommonTableColumn>\r\n                  <CommonTableColumn>\r\n                    {item.counselorId == null ? (\r\n                      <button\r\n                        onClick={() =>\r\n                          togglePopup({\r\n                            inqueryId: item.id,\r\n                          })\r\n                        }\r\n                      >\r\n                        없음\r\n                      </button>\r\n                    ) : (\r\n                      <div onClick={isCounselorExistAlert}>\r\n                        {item.counselorId}\r\n                      </div>\r\n                    )}\r\n                  </CommonTableColumn>\r\n                  <CommonTableColumn>{item.createdAt}</CommonTableColumn>\r\n                  <CommonTableColumn>\r\n                    {userInfo !== null && item.counselorId === userInfo.id ? (\r\n                      <Link\r\n                        to={{\r\n                          pathname: `/PostRegistCounselor`,\r\n                          state: {\r\n                            inqueryId: item.id,\r\n                            userId: item.userId,\r\n                            title: item.title,\r\n                            content: item.content,\r\n                            counselorId: item.counselorId,\r\n                            createdAt: item.createdAt,\r\n                            updatedAt: item.updatedAt,\r\n                          },\r\n                        }}\r\n                      >\r\n                        등록\r\n                      </Link>\r\n                    ) : (\r\n                      `등록불가`\r\n                    )}\r\n                  </CommonTableColumn>\r\n                </CommonTableRow>\r\n              );\r\n            })\r\n          : \"\"}\r\n      </CommonTable>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PostMainCounselor;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport CommonTable from \"../table/CommonTable\";\r\nimport CommonTableColumn from \"../table/CommonTableColumn\";\r\nimport CommonTableRow from \"../table/CommonTableRow\";\r\nimport axios from \"axios\";\r\nimport \"./Post.css\";\r\n\r\nconst PostMainCustomer = (props) => {\r\n  const [dataList, setDataList] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getInquerysList();\r\n  }, []);\r\n\r\n  const getInquerysList = () => {\r\n    axios\r\n      .get(\"http://localhost:8000/api/getInquerys\")\r\n      .then((response) => {\r\n        setDataList(response.data.response);\r\n      })\r\n      .catch((Error) => {\r\n        console.log(Error);\r\n      });\r\n  };\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem(\"userInfo\");\r\n    props.history.push(\"/\");\r\n  };\r\n\r\n  const postRegist = () => {\r\n    localStorage.removeItem(\"userInfo\");\r\n    props.history.push(\"/PostRegistCustomer\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"topBtnDiv\">\r\n        <button onClick={logout}>메인화면으로</button>\r\n        <button onClick={logout}>문의글 확인</button>\r\n        <button onClick={postRegist}>문의글 등록</button>\r\n      </div>\r\n      <div className=\"title\">고객 문의 목록 (고객 전용)</div>\r\n      <CommonTable\r\n        headersName={[\r\n          \"글번호\",\r\n          \"고객ID\",\r\n          \"제목\",\r\n          \"상담사ID\",\r\n          \"등록일\",\r\n          \"상담사 답변\",\r\n        ]}\r\n      >\r\n        {dataList\r\n          ? dataList.map((item, index) => {\r\n              return (\r\n                <CommonTableRow key={index}>\r\n                  <CommonTableColumn>{item.id}</CommonTableColumn>\r\n                  <CommonTableColumn>{item.userId}</CommonTableColumn>\r\n                  <CommonTableColumn>\r\n                    <Link\r\n                      to={{\r\n                        pathname: `/PostView`,\r\n                        state: {\r\n                          userId: item.userId,\r\n                          title: item.title,\r\n                          content: item.content,\r\n                          counselorId: item.counselorId,\r\n                          createdAt: item.createdAt,\r\n                          updatedAt: item.updatedAt,\r\n                        },\r\n                      }}\r\n                    >\r\n                      {item.title}\r\n                    </Link>\r\n                  </CommonTableColumn>\r\n                  <CommonTableColumn>\r\n                    {item.counselorId == null ? `없음` : item.counselorId}\r\n                  </CommonTableColumn>\r\n                  <CommonTableColumn>{item.createdAt}</CommonTableColumn>\r\n                  <CommonTableColumn>\r\n                    {item.isAnswered == \"N\" ? (\r\n                      \"답변없음\"\r\n                    ) : (\r\n                      <Link\r\n                        to={{\r\n                          pathname: `/PostView`,\r\n                          state: {\r\n                            userId: item.userId,\r\n                            title: item.title,\r\n                            content: item.content,\r\n                            counselorId: item.counselorId,\r\n                            createdAt: item.createdAt,\r\n                            updatedAt: item.updatedAt,\r\n                          },\r\n                        }}\r\n                      >\r\n                        답변보기\r\n                      </Link>\r\n                    )}\r\n                  </CommonTableColumn>\r\n                </CommonTableRow>\r\n              );\r\n            })\r\n          : \"\"}\r\n      </CommonTable>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PostMainCustomer;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { getPostByNo } from \"../../Data\";\r\nimport \"./Post.css\";\r\n\r\nconst PostView = ({ history, location: { state }, match }) => {\r\n  const [data, setData] = useState({});\r\n\r\n  const { no } = match.params;\r\n\r\n  console.log(match);\r\n\r\n  useEffect(() => {\r\n    setData(state);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <h2 align=\"center\">게시글 상세정보</h2>\r\n\r\n      <div className=\"post-view-wrapper\">\r\n        {data ? (\r\n          <>\r\n            <div className=\"post-view-row\">\r\n              <label>게시글 번호</label>\r\n              <label>{data.id}</label>\r\n            </div>\r\n            <div className=\"post-view-row\">\r\n              <label>제목</label>\r\n              <label>{data.title}</label>\r\n            </div>\r\n            <div className=\"post-view-row\">\r\n              <label>작성자 ID</label>\r\n              <label>{data.userId}</label>\r\n            </div>\r\n            <div className=\"post-view-row\">\r\n              <label>상담사 ID</label>\r\n              <label>{data.counselorId}</label>\r\n            </div>\r\n            <div className=\"post-view-row\">\r\n              <label>작성일</label>\r\n              <label>{data.createdAt}</label>\r\n            </div>\r\n            <div className=\"post-view-row\">\r\n              <label>문의내용</label>\r\n              <div>{data.content}</div>\r\n            </div>\r\n            <div className=\"post-view-row\">\r\n              <label>답변내용</label>\r\n              <div></div>\r\n            </div>\r\n          </>\r\n        ) : (\r\n          \"해당 게시글을 찾을 수 없습니다.\"\r\n        )}\r\n        <button\r\n          className=\"post-view-go-list-btn\"\r\n          onClick={() => history.goBack()}\r\n        >\r\n          목록으로 돌아가기\r\n        </button>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PostView;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nimport \"./Post.css\";\r\n\r\nconst PostRegistCounselor = ({\r\n  history,\r\n  location: { state },\r\n  match,\r\n  props,\r\n}) => {\r\n  const [data, setData] = useState({});\r\n  const userInfo = JSON.parse(localStorage.getItem(\"userInfo\"));\r\n\r\n  const [title, setTitle] = useState(\"\");\r\n  const [content, setContent] = useState(\"\");\r\n  const onChangeTitle = (e) => {\r\n    setTitle(e.target.value);\r\n  };\r\n  const onChangeContent = (e) => {\r\n    setContent(e.target.value);\r\n  };\r\n  const postRegist = () => {\r\n    axios\r\n      .post(\r\n        \"http://localhost:8000/api/answers\",\r\n        {\r\n          inqueryId: data.inqueryId,\r\n          counselorId: userInfo.id,\r\n          title: title,\r\n          content: content,\r\n        },\r\n        {\r\n          headers: {\r\n            \"X-USER-ID\": userInfo.id,\r\n          },\r\n        }\r\n      )\r\n      .then((response) => {\r\n        console.log(response);\r\n        if (response.data.success) {\r\n          alert(\"답변 등록이 완료되었습니다.\");\r\n          history.goBack();\r\n        } else {\r\n          alert(response.data.error.message);\r\n        }\r\n      })\r\n      .catch((Error) => {\r\n        if (!Error.response.data.success) {\r\n          alert(Error.response.data.error.message);\r\n        }\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    setData(state);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <h2 align=\"center\">답변 작성 페이지</h2>\r\n\r\n      <div className=\"post-view-wrapper\">\r\n        {data ? (\r\n          <>\r\n            <div className=\"post-view-row\">\r\n              <label>게시글 번호</label>\r\n              <label>{data.inqueryId}</label>\r\n            </div>\r\n            <div className=\"post-view-row\">\r\n              <label>문의글 제목</label>\r\n              <label>{data.title}</label>\r\n            </div>\r\n            <div className=\"post-view-row\">\r\n              <label>작성자 ID</label>\r\n              <label>{data.userId}</label>\r\n            </div>\r\n            <div className=\"post-view-row\">\r\n              <label>문의글 작성일</label>\r\n              <label>{data.createdAt}</label>\r\n            </div>\r\n            <div className=\"post-view-row\">\r\n              <label>문의 내용</label>\r\n              <div>{data.content}</div>\r\n            </div>\r\n            <div className=\"post-view-row\">\r\n              <label>답변 제목</label>\r\n              <input value={title} onChange={onChangeTitle}></input>\r\n            </div>\r\n            <div className=\"post-view-row\">\r\n              <label>답변 내용</label>\r\n              <textarea value={content} onChange={onChangeContent}></textarea>\r\n            </div>\r\n          </>\r\n        ) : (\r\n          \"해당 게시글을 찾을 수 없습니다.\"\r\n        )}\r\n        <div className=\"btnDiv\">\r\n          <button className=\"post-view-go-list-btn\" onClick={postRegist}>\r\n            등록\r\n          </button>\r\n          <button\r\n            className=\"post-view-go-list-btn\"\r\n            onClick={() => history.goBack()}\r\n          >\r\n            목록으로 돌아가기\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PostRegistCounselor;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nimport \"./Post.css\";\r\n\r\nconst PostRegistCustomer = ({ history, location: { state }, match }) => {\r\n  const [userId, setUserId] = useState(\"\");\r\n  const [title, setTitle] = useState(\"\");\r\n  const [content, setContent] = useState(\"\");\r\n  const onChangeUserId = (e) => {\r\n    setUserId(e.target.value);\r\n  };\r\n  const onChangeTitle = (e) => {\r\n    setTitle(e.target.value);\r\n  };\r\n  const onChangeContent = (e) => {\r\n    setContent(e.target.value);\r\n  };\r\n  const postRegist = () => {\r\n    axios\r\n      .post(\"http://localhost:8000/api/inquery\", {\r\n        userId: userId,\r\n        title: title,\r\n        content: content,\r\n      })\r\n      .then((response) => {\r\n        console.log(response);\r\n        if (response.data.success) {\r\n          alert(\"문의글 등록이 완료되었습니다.\");\r\n          history.goBack();\r\n        } else {\r\n          alert(response.data.error.message);\r\n        }\r\n      })\r\n      .catch((Error) => {\r\n        if (!Error.response.data.success) {\r\n          alert(Error.response.data.error.message);\r\n        }\r\n      });\r\n  };\r\n  useEffect(() => {\r\n    // setData(state);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <h2 align=\"center\">문의글 작성</h2>\r\n\r\n      <div className=\"post-view-wrapper\">\r\n        <>\r\n          <div className=\"post-view-row\">\r\n            <label>작성자 ID</label>\r\n            <input value={userId} onChange={onChangeUserId}></input>\r\n          </div>\r\n          <div className=\"post-view-row\">\r\n            <label>제목</label>\r\n            <input value={title} onChange={onChangeTitle}></input>\r\n          </div>\r\n          <div className=\"post-view-row\">\r\n            <label>내용</label>\r\n            <textarea value={content} onChange={onChangeContent}></textarea>\r\n          </div>\r\n        </>\r\n\r\n        <div className=\"btnDiv\">\r\n          <button className=\"post-view-go-list-btn\" onClick={postRegist}>\r\n            등록\r\n          </button>\r\n          <button\r\n            className=\"post-view-go-list-btn\"\r\n            onClick={() => history.goBack()}\r\n          >\r\n            목록으로 돌아가기\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PostRegistCustomer;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Home.css\";\r\nconst Home = (props) => {\r\n  return (\r\n    <>\r\n      <button\r\n        className=\"customerBtn\"\r\n        onClick={() => props.history.push(\"/postMainCustomer\")}\r\n      >\r\n        고객\r\n      </button>\r\n      <button\r\n        className=\"consultantBtn\"\r\n        onClick={() => props.history.push(\"/login\")}\r\n      >\r\n        상담사\r\n      </button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./Login.css\";\nimport axios from \"axios\";\n\nconst Login = (props) => {\n  const [userId, setUserId] = useState(\"\");\n  const [userPw, setUserPw] = useState(\"\");\n\n  const onClickLogin = () => {\n    console.log(props);\n\n    axios\n      .post(\" http://localhost:8000/api/userLogin\", {\n        id: userId,\n        password: userPw,\n      })\n      .then((response) => {\n        console.log(response);\n        if (response.data.success) {\n          alert(\"로그인 성공\");\n          localStorage.setItem(\n            \"userInfo\",\n            JSON.stringify(response.data.response)\n          );\n          props.history.push(\"/PostMainCounselor\");\n        } else {\n          alert(response.data.error.message);\n        }\n      })\n      .catch((Error) => {\n        if (!Error.response.data.success) {\n          alert(Error.response.data.error.message);\n        }\n      });\n  };\n\n  const onClickSignUpBtn = () => {\n    console.log(props);\n    props.history.push(\"/signUp\");\n  };\n\n  const onChangeUserId = (e) => {\n    setUserId(e.target.value);\n  };\n\n  const onChangeUserPw = (e) => {\n    setUserPw(e.target.value);\n  };\n\n  const enterkey = () => {\n    if (window.event.keyCode == 13) {\n      // 엔터키가 눌렸을 때 실행할 내용\n      onClickLogin();\n    }\n  };\n  return (\n    <div className=\"loginpage\">\n      <h2>로그인</h2>\n      <div>\n        아이디 :{\" \"}\n        <input className=\"inputId\" value={userId} onChange={onChangeUserId} />\n      </div>\n      <div>\n        비밀번호 :{\" \"}\n        <input\n          className=\"inputPw\"\n          type=\"password\"\n          value={userPw}\n          onChange={onChangeUserPw}\n          onKeyPress={enterkey}\n        />\n      </div>\n      <button className=\"loginBtn\" onClick={onClickLogin}>\n        로그인\n      </button>\n      <button className=\"signUpBtn\" onClick={onClickSignUpBtn}>\n        회원가입\n      </button>\n    </div>\n  );\n};\n\nexport default Login;\n","import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport \"./SignUp.css\";\n\nconst SignUp = (props) => {\n  const [userId, setUserId] = useState(\"\");\n  const [username, setUserName] = useState(\"\");\n  const [userPassword, setUserPassword] = useState(\"\");\n  const [userPasswordCheck, setUserPasswordCheck] = useState(\"\");\n  const [isIdError, setIsIdError] = useState(false);\n  const [isPassWordError, setIsPassWordError] = useState(false);\n  const [isPassWordCheckError, setIsPassWordCheckError] = useState(false);\n\n  const onChangeId = (e) => {\n    setUserId(e.target.value);\n  };\n  const onChangeUserName = (e) => {\n    setUserName(e.target.value);\n  };\n\n  const onChangePassword = (e) => {\n    setUserPassword(e.target.value);\n  };\n  const onChangePasswordCheck = (e) => {\n    setUserPasswordCheck(e.target.value);\n  };\n\n  const onClickCancelBtn = () => {\n    props.history.push(\"/login\");\n  };\n\n  const onClickSignUpBtn = async () => {\n    setIsIdError(false);\n    setIsPassWordError(false);\n    setIsPassWordCheckError(false);\n\n    const idRegex = new RegExp(\"^[a-zA-Z0-9]{4,12}$\");\n    const passwordRegex = new RegExp(\"^(?=.*[0-9])(?=.*[a-zA-z]).{8,15}$\");\n    console.log(userId);\n    if (!idRegex.test(userId)) {\n      setIsIdError(true);\n      console.log(userId);\n      return;\n    }\n\n    if (!passwordRegex.test(userPassword)) {\n      setIsPassWordError(true);\n      return;\n    }\n\n    if (userPassword !== userPasswordCheck) {\n      setIsPassWordCheckError(true);\n      return;\n    }\n\n    axios\n      .post(\"http://localhost:8000/api/user\", {\n        id: userId,\n        name: username,\n        role: \"C\",\n        password: userPassword,\n      })\n      .then((response) => {\n        console.log(response);\n        if (response.data.success) {\n          alert(\"회원가입이 완료되었습니다.\");\n          props.history.push(\"/login\");\n        } else {\n          alert(response.data.error.message);\n        }\n      })\n      .catch((Error) => {\n        if (!Error.response.data.success) {\n          alert(Error.response.data.error.message);\n        }\n      });\n  };\n\n  const handleSubmit = () => {\n    console.log(\"handlesubmit\");\n  };\n\n  return (\n    <div className=\"signuppage\">\n      <h2>회원가입</h2>\n      <form onSubmit={handleSubmit}>\n        <div>\n          아이디 <input value={userId} onChange={onChangeId} />\n        </div>\n        {isIdError ? (\n          <span className=\"redText\">\n            아이디는 4~12자의 영문 대소문자와 숫자로만 입력해 주세요.\n          </span>\n        ) : (\n          <></>\n        )}\n        <div>\n          닉네임\n          <input value={username} onChange={onChangeUserName} />\n        </div>\n        <div>\n          비밀번호{\" \"}\n          <input\n            type=\"password\"\n            value={userPassword}\n            onChange={onChangePassword}\n          />\n        </div>\n        {isPassWordError ? (\n          <span className=\"redText\">\n            비밀번호는 영문, 숫자 조합으로 8~15자리로 입력해 주세요.\n          </span>\n        ) : (\n          <></>\n        )}\n        <div>\n          비밀번호 확인{\" \"}\n          <input\n            type=\"password\"\n            value={userPasswordCheck}\n            onChange={onChangePasswordCheck}\n          />\n        </div>\n        {isPassWordCheckError ? (\n          <span className=\"redText\">비밀번호가 일치하지 않습니다.</span>\n        ) : (\n          <></>\n        )}\n      </form>\n\n      <button className=\"cancelBtn\" onClick={onClickCancelBtn}>\n        취소\n      </button>\n      <button className=\"signupBtn\" onClick={onClickSignUpBtn}>\n        회원가입\n      </button>\n    </div>\n  );\n};\n\nexport default SignUp;\n","//App.js\r\nimport React from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\nimport PostMainCounselor from \"./pages/post/PostMainCounselor\";\r\nimport PostMainCustomer from \"./pages/post/PostMainCustomer\";\r\nimport PostView from \"./pages/post/PostView\";\r\nimport PostRegistCounselor from \"./pages/post/PostRegistCounselor\";\r\nimport PostRegistCustomer from \"./pages/post/PostRegistCustomer\";\r\nimport Home from \"./pages/Home\";\r\nimport Login from \"./pages/login/Login\";\r\nimport SignUp from \"./pages/login/SignUp\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Route exact path=\"/\" component={Home} />\r\n      <Route exact path=\"/login\" component={Login} />\r\n      <Route exact path=\"/signUp\" component={SignUp} />\r\n      <Route exact path=\"/postMainCounselor\" component={PostMainCounselor} />\r\n      <Route exact path=\"/postMainCustomer\" component={PostMainCustomer} />\r\n      <Route exact path=\"/postView\" component={PostView} />\r\n      <Route\r\n        exact\r\n        path=\"/postRegistCounselor\"\r\n        component={PostRegistCounselor}\r\n      />\r\n      <Route exact path=\"/postRegistCustomer\" component={PostRegistCustomer} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\nreportWebVitals();\n"],"sourceRoot":""}