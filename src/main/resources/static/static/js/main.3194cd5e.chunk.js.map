{"version":3,"sources":["reportWebVitals.js","pages/table/CommonTable.js","pages/table/CommonTableColumn.js","pages/table/CommonTableRow.js","pages/post/PostMainCounselor.js","utils.js","pages/post/PostMainCustomer.js","pages/post/PostView.js","pages/post/PostViewAnswer.js","pages/post/PostRegistCounselor.js","pages/post/PostRegistCustomer.js","pages/Home.js","pages/login/Login.js","pages/login/SignUp.js","App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","CommonTable","props","headersName","children","className","map","item","index","CommonTableColumn","CommonTableRow","PostMainCounselor","useState","dataList","setDataList","userInfo","JSON","parse","localStorage","getItem","isCounselorExistAlert","alert","useEffect","getInquerysList","callback","delay","savedCallback","useRef","current","id","setInterval","clearInterval","useInterval","a","axios","get","response","data","catch","Error","console","log","onClick","removeItem","history","push","userId","to","pathname","state","title","content","counselorId","createdAt","updatedAt","param","inqueryId","window","confirm","patch","conselorId","headers","isAnswered","PostMainCustomer","setUserId","value","onChange","e","target","onKeyPress","placeholder","PostView","location","match","setData","align","readOnly","goBack","PostViewAnswer","PostRegistCounselor","setTitle","setContent","post","success","error","message","PostRegistCustomer","Home","Login","userPw","setUserPw","onClickLogin","password","setItem","stringify","type","event","keyCode","SignUp","username","setUserName","userPassword","setUserPassword","userPasswordCheck","setUserPasswordCheck","isIdError","setIsIdError","isPassWordError","setIsPassWordError","isPassWordCheckError","setIsPassWordCheckError","onClickSignUpBtn","idRegex","RegExp","passwordRegex","test","name","role","onSubmit","App","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3194cd5e.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\r\nimport \"./CommonTable.css\";\r\n\r\nconst CommonTable = (props) => {\r\n  const { headersName, children } = props;\r\n\r\n  return (\r\n    <table className=\"common-table\">\r\n      <thead>\r\n        <tr>\r\n          {headersName.map((item, index) => {\r\n            return (\r\n              <td className=\"common-table-header-column\" key={index}>\r\n                {item}\r\n              </td>\r\n            );\r\n          })}\r\n        </tr>\r\n      </thead>\r\n      <tbody>{children}</tbody>\r\n    </table>\r\n  );\r\n};\r\n\r\nexport default CommonTable;\r\n","import React from \"react\";\r\n\r\nconst CommonTableColumn = ({ children }) => {\r\n  return <td className=\"common-table-column\">{children}</td>;\r\n};\r\n\r\nexport default CommonTableColumn;\r\n","import React from \"react\";\r\n\r\nconst CommonTableRow = ({ children }) => {\r\n  return <tr className=\"common-table-row\">{children}</tr>;\r\n};\r\n\r\nexport default CommonTableRow;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport CommonTable from \"../table/CommonTable\";\r\nimport CommonTableColumn from \"../table/CommonTableColumn\";\r\nimport CommonTableRow from \"../table/CommonTableRow\";\r\nimport axios from \"axios\";\r\nimport { useInterval } from \"../../utils\";\r\nimport \"./Post.css\";\r\n\r\nconst PostMainCounselor = (props) => {\r\n  const [dataList, setDataList] = useState([]);\r\n\r\n  const userInfo = JSON.parse(localStorage.getItem(\"userInfo\"));\r\n\r\n  //상담사 지정\r\n  const togglePopup = (param, event) => {\r\n    if (window.confirm(\"해당 문의글의 지정 상담사로 선택하시겠습니까?\")) {\r\n      axios\r\n        .patch(\r\n          `http://localhost:8000/api/inqueryChoice/${param.inqueryId}`,\r\n          {\r\n            inqueryId: param.inqueryId,\r\n            conselorId: userInfo.id,\r\n          },\r\n          {\r\n            headers: {\r\n              \"X-USER-ID\": userInfo.id,\r\n            },\r\n          }\r\n        )\r\n        .then((response) => {\r\n          getInquerysList();\r\n        })\r\n        .catch((Error) => {\r\n          console.log(Error);\r\n        });\r\n    } else {\r\n    }\r\n  };\r\n\r\n  //이미 지정된 상담사 클릭\r\n  const isCounselorExistAlert = () => {\r\n    alert(\"이미 담당자가 지정된 문의건입니다.\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    getInquerysList();\r\n  }, []);\r\n\r\n  useInterval(() => {\r\n    getInquerysList();\r\n  }, 1000 * 10);\r\n\r\n  const getInquerysList = async () => {\r\n    await axios\r\n      .get(\"http://localhost:8000/api/inquerys\")\r\n      .then((response) => {\r\n        setDataList(response.data.response);\r\n      })\r\n      .catch((Error) => {\r\n        console.log(Error);\r\n      });\r\n  };\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem(\"userInfo\");\r\n    props.history.push(\"/\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <button className=\"logoutBtn\" onClick={logout}>\r\n        로그아웃\r\n      </button>\r\n      <div className=\"title\">고객 문의 목록 (상담사 전용)</div>\r\n      <CommonTable\r\n        headersName={[\r\n          \"글번호\",\r\n          \"고객ID\",\r\n          \"제목\",\r\n          \"상담사ID\",\r\n          \"등록일\",\r\n          \"답변등록\",\r\n          \"답변등록여부\",\r\n        ]}\r\n      >\r\n        {dataList\r\n          ? dataList.map((item, index) => {\r\n              return (\r\n                <CommonTableRow key={index}>\r\n                  <CommonTableColumn>{item.id}</CommonTableColumn>\r\n                  <CommonTableColumn>{item.userId}</CommonTableColumn>\r\n                  <CommonTableColumn>\r\n                    <Link\r\n                      to={{\r\n                        pathname: `/PostView`,\r\n                        state: {\r\n                          userId: item.userId,\r\n                          title: item.title,\r\n                          content: item.content,\r\n                          counselorId: item.counselorId,\r\n                          createdAt: item.createdAt,\r\n                          updatedAt: item.updatedAt,\r\n                        },\r\n                      }}\r\n                    >\r\n                      {item.title}\r\n                    </Link>\r\n                  </CommonTableColumn>\r\n                  <CommonTableColumn>\r\n                    {item.counselorId == null ? (\r\n                      <button\r\n                        onClick={() =>\r\n                          togglePopup({\r\n                            inqueryId: item.id,\r\n                          })\r\n                        }\r\n                      >\r\n                        없음\r\n                      </button>\r\n                    ) : (\r\n                      <div onClick={isCounselorExistAlert}>\r\n                        {item.counselorId}\r\n                      </div>\r\n                    )}\r\n                  </CommonTableColumn>\r\n                  <CommonTableColumn>{item.createdAt}</CommonTableColumn>\r\n                  <CommonTableColumn>\r\n                    {userInfo !== null && item.counselorId === userInfo.id ? (\r\n                      <Link\r\n                        to={{\r\n                          pathname: `/PostRegistCounselor`,\r\n                          state: {\r\n                            inqueryId: item.id,\r\n                            userId: item.userId,\r\n                            title: item.title,\r\n                            content: item.content,\r\n                            counselorId: item.counselorId,\r\n                            createdAt: item.createdAt,\r\n                            updatedAt: item.updatedAt,\r\n                          },\r\n                        }}\r\n                      >\r\n                        등록\r\n                      </Link>\r\n                    ) : (\r\n                      `등록불가`\r\n                    )}\r\n                  </CommonTableColumn>\r\n                  <CommonTableColumn>{item.isAnswered}</CommonTableColumn>\r\n                </CommonTableRow>\r\n              );\r\n            })\r\n          : \"\"}\r\n      </CommonTable>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PostMainCounselor;\r\n","import { useEffect, useRef } from \"react\";\r\n\r\nexport const useInterval = (callback, delay) => {\r\n    const savedCallback = useRef();\r\n\r\n    useEffect(() => {\r\n        savedCallback.current = callback;\r\n    }, [callback]);\r\n\r\n    useEffect(() => {\r\n        function tick() {\r\n            savedCallback.current();\r\n        }\r\n        if (delay !== null) {\r\n            const id = setInterval(tick, delay);\r\n            return () => clearInterval(id);\r\n        }\r\n    }, [delay]);\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport CommonTable from \"../table/CommonTable\";\r\nimport CommonTableColumn from \"../table/CommonTableColumn\";\r\nimport CommonTableRow from \"../table/CommonTableRow\";\r\nimport axios from \"axios\";\r\nimport \"./Post.css\";\r\n\r\nconst PostMainCustomer = (props) => {\r\n  const [dataList, setDataList] = useState([]);\r\n  const [userId, setUserId] = useState(\"\");\r\n\r\n  const onChangeUserId = (e) => {\r\n    setUserId(e.target.value);\r\n  };\r\n\r\n  const getInquerysList = () => {\r\n    axios\r\n      .get(`http://localhost:8000/api/myInquerys`, {\r\n        headers: {\r\n          \"X-USER-ID\": userId,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        setDataList(response.data.response);\r\n      })\r\n      .catch((Error) => {\r\n        console.log(Error);\r\n      });\r\n  };\r\n\r\n  const logout = () => {\r\n    props.history.push(\"/\");\r\n  };\r\n\r\n  const postRegist = () => {\r\n    props.history.push(\"/PostRegistCustomer\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"topBtnDiv\">\r\n        <button onClick={logout}>메인화면으로</button>\r\n        <button onClick={postRegist}>문의글 등록</button>\r\n      </div>\r\n      <div className=\"topBtnDiv\">\r\n        <input\r\n          value={userId}\r\n          onChange={onChangeUserId}\r\n          onKeyPress={getInquerysList}\r\n          placeholder=\"검색할 ID를 입력하세요\"\r\n        ></input>\r\n        <button onClick={getInquerysList}>문의글 검색</button>\r\n      </div>\r\n\r\n      <div className=\"title\">고객 문의 목록 (고객 전용)</div>\r\n      <CommonTable\r\n        headersName={[\r\n          \"글번호\",\r\n          \"고객ID\",\r\n          \"제목\",\r\n          \"상담사ID\",\r\n          \"등록일\",\r\n          \"상담사 답변\",\r\n        ]}\r\n      >\r\n        {dataList\r\n          ? dataList.map((item, index) => {\r\n              return (\r\n                <CommonTableRow key={index}>\r\n                  <CommonTableColumn>{item.id}</CommonTableColumn>\r\n                  <CommonTableColumn>{item.userId}</CommonTableColumn>\r\n                  <CommonTableColumn>\r\n                    <Link\r\n                      to={{\r\n                        pathname: `/PostView`,\r\n                        state: {\r\n                          id: item.id,\r\n                          userId: item.userId,\r\n                          title: item.title,\r\n                          content: item.content,\r\n                          counselorId: item.counselorId,\r\n                          createdAt: item.createdAt,\r\n                          updatedAt: item.updatedAt,\r\n                        },\r\n                      }}\r\n                    >\r\n                      {item.title}\r\n                    </Link>\r\n                  </CommonTableColumn>\r\n                  <CommonTableColumn>\r\n                    {item.counselorId == null ? `없음` : item.counselorId}\r\n                  </CommonTableColumn>\r\n                  <CommonTableColumn>{item.createdAt}</CommonTableColumn>\r\n                  <CommonTableColumn>\r\n                    {item.isAnswered === \"N\" ? (\r\n                      \"답변없음\"\r\n                    ) : (\r\n                      <Link\r\n                        to={{\r\n                          pathname: `/PostViewAnswer`,\r\n                          state: {\r\n                            id: item.id,\r\n                            userId: item.userId,\r\n                            counselorId: item.counselorId,\r\n                          },\r\n                        }}\r\n                      >\r\n                        답변보기\r\n                      </Link>\r\n                    )}\r\n                  </CommonTableColumn>\r\n                </CommonTableRow>\r\n              );\r\n            })\r\n          : \"\"}\r\n      </CommonTable>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PostMainCustomer;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./Post.css\";\r\n\r\nconst PostView = ({ history, location: { state }, match }) => {\r\n  const [data, setData] = useState({});\r\n\r\n  useEffect(() => {\r\n    setData(state);\r\n    console.log(state);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <h2 align=\"center\">게시글 상세정보</h2>\r\n\r\n      <div className=\"post-view-wrapper\">\r\n        {data ? (\r\n          <>\r\n            <div className=\"post-view-row\">\r\n              <label>게시글 번호</label>\r\n              <label>{data.id}</label>\r\n            </div>\r\n            <div className=\"post-view-row\">\r\n              <label>제목</label>\r\n              <label>{data.title}</label>\r\n            </div>\r\n            <div className=\"post-view-row\">\r\n              <label>작성자 ID</label>\r\n              <label>{data.userId}</label>\r\n            </div>\r\n            <div className=\"post-view-row\">\r\n              <label>상담사 ID</label>\r\n              <label>{data.counselorId}</label>\r\n            </div>\r\n            <div className=\"post-view-row\">\r\n              <label>작성일</label>\r\n              <label>{data.createdAt}</label>\r\n            </div>\r\n            <div className=\"post-view-row\">\r\n              <label>문의내용</label>\r\n              <textarea value={data.content} readOnly />\r\n            </div>\r\n          </>\r\n        ) : (\r\n          \"해당 게시글을 찾을 수 없습니다.\"\r\n        )}\r\n        <button\r\n          className=\"post-view-go-list-btn\"\r\n          onClick={() => history.goBack()}\r\n        >\r\n          목록으로 돌아가기\r\n        </button>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PostView;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./Post.css\";\r\n\r\nconst PostViewAnswer = ({ history, location: { state }, match }) => {\r\n  const [data, setData] = useState({});\r\n  const [title, setTitle] = useState(\"\");\r\n  const [content, setContent] = useState(\"\");\r\n\r\n  console.log(state);\r\n  const getAnswer = () => {\r\n    axios\r\n      .get(`http://localhost:8000/api/myAnswer/${state.id}`, {\r\n        headers: {\r\n          \"X-USER-ID\": state.counselorId,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        //답변글이 있는 경우 표현.\r\n        console.log(response.data.response);\r\n        setData(response.data.response);\r\n        // setDataList(response.data.response);\r\n      })\r\n      .catch((Error) => {\r\n        //답변글이 없는 경우 입력해야 함.\r\n      });\r\n  };\r\n\r\n  const onChangeTitle = (e) => {\r\n    setTitle(e.target.value);\r\n  };\r\n  const onChangeContent = (e) => {\r\n    setContent(e.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setData(state);\r\n    getAnswer();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <h2 align=\"center\">게시글 상세정보</h2>\r\n\r\n      <div className=\"post-view-wrapper\">\r\n        {data ? (\r\n          <>\r\n            <div className=\"post-view-row\">\r\n              <label>게시글 번호</label>\r\n              <label>{state.id}</label>\r\n            </div>\r\n            <div className=\"post-view-row\">\r\n              <label>답변 제목</label>\r\n              <label>{data.title}</label>\r\n            </div>\r\n            <div className=\"post-view-row\">\r\n              <label>작성자 ID</label>\r\n              <label>{state.userId}</label>\r\n            </div>\r\n            <div className=\"post-view-row\">\r\n              <label>상담사 ID</label>\r\n              <label>{data.counselorId}</label>\r\n            </div>\r\n            <div className=\"post-view-row\">\r\n              <label>작성일</label>\r\n              <label>{data.createdAt}</label>\r\n            </div>\r\n            <div className=\"post-view-row\">\r\n              <label>답변내용</label>\r\n              <textarea value={data.content} readOnly />\r\n            </div>\r\n          </>\r\n        ) : (\r\n          \"해당 게시글을 찾을 수 없습니다.\"\r\n        )}\r\n        <button\r\n          className=\"post-view-go-list-btn\"\r\n          onClick={() => history.goBack()}\r\n        >\r\n          목록으로 돌아가기\r\n        </button>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PostViewAnswer;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nimport \"./Post.css\";\r\n\r\nconst PostRegistCounselor = ({ history, location: { state } }) => {\r\n  const [data, setData] = useState({});\r\n  const userInfo = JSON.parse(localStorage.getItem(\"userInfo\"));\r\n\r\n  const [title, setTitle] = useState(\"\");\r\n  const [content, setContent] = useState(\"\");\r\n\r\n  const onChangeTitle = (e) => {\r\n    setTitle(e.target.value);\r\n  };\r\n  const onChangeContent = (e) => {\r\n    setContent(e.target.value);\r\n  };\r\n  const postRegist = () => {\r\n    if (title === \"\") {\r\n      alert(\"답변 제목을 입력해야 합니다.\");\r\n      return;\r\n    }\r\n    if (content === \"\") {\r\n      alert(\"답변 내용을 입력해야 합니다.\");\r\n      return;\r\n    }\r\n\r\n    axios\r\n      .post(\r\n        \"http://localhost:8000/api/answers\",\r\n        {\r\n          inqueryId: data.inqueryId,\r\n          counselorId: userInfo.id,\r\n          title: title,\r\n          content: content,\r\n        },\r\n        {\r\n          headers: {\r\n            \"X-USER-ID\": userInfo.id,\r\n          },\r\n        }\r\n      )\r\n      .then((response) => {\r\n        console.log(response);\r\n        if (response.data.success) {\r\n          alert(\"답변 등록이 완료되었습니다.\");\r\n          history.goBack();\r\n        } else {\r\n          alert(response.data.error.message);\r\n        }\r\n      })\r\n      .catch((Error) => {\r\n        if (!Error.response.data.success) {\r\n          alert(Error.response.data.error.message);\r\n        }\r\n      });\r\n  };\r\n\r\n  const getAnswer = () => {\r\n    axios\r\n      .get(`http://localhost:8000/api/myAnswer/${state.inqueryId}`, {\r\n        headers: {\r\n          \"X-USER-ID\": userInfo.id,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        //답변글이 있는 경우 표현.\r\n        console.log(response);\r\n        setTitle(response.data.response.title);\r\n        setContent(response.data.response.content);\r\n        // setDataList(response.data.response);\r\n      })\r\n      .catch((Error) => {\r\n        //답변글이 없는 경우 입력해야 함.\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    setData(state);\r\n    getAnswer();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <h2 align=\"center\">답변 작성 페이지</h2>\r\n\r\n      <div className=\"post-view-wrapper\">\r\n        {data ? (\r\n          <>\r\n            <div className=\"post-view-row\">\r\n              <label>게시글 번호</label>\r\n              <label>{data.inqueryId}</label>\r\n            </div>\r\n            <div className=\"post-view-row\">\r\n              <label>문의글 제목</label>\r\n              <label>{data.title}</label>\r\n            </div>\r\n            <div className=\"post-view-row\">\r\n              <label>작성자 ID</label>\r\n              <label>{data.userId}</label>\r\n            </div>\r\n            <div className=\"post-view-row\">\r\n              <label>문의글 작성일</label>\r\n              <label>{data.createdAt}</label>\r\n            </div>\r\n            <div className=\"post-view-row\">\r\n              <label>문의 내용</label>\r\n              <textarea value={data.content} readOnly />\r\n            </div>\r\n            <div className=\"post-view-row\">\r\n              <label>답변 제목</label>\r\n              <input value={title} onChange={onChangeTitle}></input>\r\n            </div>\r\n            <div className=\"post-view-row\">\r\n              <label>답변 내용</label>\r\n              <textarea value={content} onChange={onChangeContent}></textarea>\r\n            </div>\r\n          </>\r\n        ) : (\r\n          \"해당 게시글을 찾을 수 없습니다.\"\r\n        )}\r\n        <div className=\"btnDiv\">\r\n          <button className=\"post-view-go-list-btn\" onClick={postRegist}>\r\n            등록\r\n          </button>\r\n          <button\r\n            className=\"post-view-go-list-btn\"\r\n            onClick={() => history.goBack()}\r\n          >\r\n            목록으로 돌아가기\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PostRegistCounselor;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nimport \"./Post.css\";\r\n\r\nconst PostRegistCustomer = ({ history, location: { state }, match }) => {\r\n  const [userId, setUserId] = useState(\"\");\r\n  const [title, setTitle] = useState(\"\");\r\n  const [content, setContent] = useState(\"\");\r\n  const onChangeUserId = (e) => {\r\n    setUserId(e.target.value);\r\n  };\r\n  const onChangeTitle = (e) => {\r\n    setTitle(e.target.value);\r\n  };\r\n  const onChangeContent = (e) => {\r\n    setContent(e.target.value);\r\n  };\r\n  const postRegist = () => {\r\n    if (userId === \"\") {\r\n      alert(\"작성자 ID를 입력해야 합니다.\");\r\n      return;\r\n    }\r\n    if (title === \"\") {\r\n      alert(\"제목을 입력해야 합니다.\");\r\n      return;\r\n    }\r\n    if (content === \"\") {\r\n      alert(\"내용을 입력해야 합니다.\");\r\n      return;\r\n    }\r\n\r\n    axios\r\n      .post(\"http://localhost:8000/api/inquery\", {\r\n        userId: userId,\r\n        title: title,\r\n        content: content,\r\n      })\r\n      .then((response) => {\r\n        console.log(response);\r\n        if (response.data.success) {\r\n          alert(\"문의글 등록이 완료되었습니다.\");\r\n          history.goBack();\r\n        } else {\r\n          alert(response.data.error.message);\r\n        }\r\n      })\r\n      .catch((Error) => {\r\n        if (!Error.response.data.success) {\r\n          alert(Error.response.data.error.message);\r\n        }\r\n      });\r\n  };\r\n  useEffect(() => {\r\n    // setData(state);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <h2 align=\"center\">문의글 작성</h2>\r\n\r\n      <div className=\"post-view-wrapper\">\r\n        <>\r\n          <div className=\"post-view-row\">\r\n            <label>작성자 ID</label>\r\n            <input value={userId} onChange={onChangeUserId}></input>\r\n          </div>\r\n          <div className=\"post-view-row\">\r\n            <label>제목</label>\r\n            <input value={title} onChange={onChangeTitle}></input>\r\n          </div>\r\n          <div className=\"post-view-row\">\r\n            <label>내용</label>\r\n            <textarea value={content} onChange={onChangeContent}></textarea>\r\n          </div>\r\n        </>\r\n\r\n        <div className=\"btnDiv\">\r\n          <button className=\"post-view-go-list-btn\" onClick={postRegist}>\r\n            등록\r\n          </button>\r\n          <button\r\n            className=\"post-view-go-list-btn\"\r\n            onClick={() => history.goBack()}\r\n          >\r\n            목록으로 돌아가기\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PostRegistCustomer;\r\n","import React from \"react\";\r\nimport \"./Home.css\";\r\nconst Home = (props) => {\r\n  return (\r\n    <div className=\"homepage\">\r\n      <h2>QnA 서비스입니다. 이용하실 권한을 선택해주세요.</h2>\r\n      <button\r\n        className=\"customerBtn\"\r\n        onClick={() => props.history.push(\"/postMainCustomer\")}\r\n      >\r\n        고객\r\n      </button>\r\n      <button\r\n        className=\"consultantBtn\"\r\n        onClick={() => props.history.push(\"/login\")}\r\n      >\r\n        상담사\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React, { useState } from \"react\";\r\nimport \"./Login.css\";\r\nimport axios from \"axios\";\r\n\r\nconst Login = (props) => {\r\n  const [userId, setUserId] = useState(\"\");\r\n  const [userPw, setUserPw] = useState(\"\");\r\n\r\n  const onClickLogin = () => {\r\n    console.log(props);\r\n\r\n    axios\r\n      .post(\" http://localhost:8000/api/userLogin\", {\r\n        id: userId,\r\n        password: userPw,\r\n      })\r\n      .then((response) => {\r\n        console.log(response);\r\n        if (response.data.success) {\r\n          alert(\"로그인 성공\");\r\n          localStorage.setItem(\r\n            \"userInfo\",\r\n            JSON.stringify(response.data.response)\r\n          );\r\n          props.history.push(\"/PostMainCounselor\");\r\n        } else {\r\n          alert(response.data.error.message);\r\n        }\r\n      })\r\n      .catch((Error) => {\r\n        if (!Error.response.data.success) {\r\n          alert(Error.response.data.error.message);\r\n        }\r\n      });\r\n  };\r\n\r\n  const onClickSignUpBtn = () => {\r\n    console.log(props);\r\n    props.history.push(\"/signUp\");\r\n  };\r\n\r\n  const onChangeUserId = (e) => {\r\n    setUserId(e.target.value);\r\n  };\r\n\r\n  const onChangeUserPw = (e) => {\r\n    setUserPw(e.target.value);\r\n  };\r\n\r\n  const enterkey = () => {\r\n    if (window.event.keyCode === 13) {\r\n      // 엔터키가 눌렸을 때 실행할 내용\r\n      onClickLogin();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"loginpage\">\r\n      <h2>로그인</h2>\r\n      <div>\r\n        아이디 :{\" \"}\r\n        <input className=\"inputId\" value={userId} onChange={onChangeUserId} />\r\n      </div>\r\n      <div>\r\n        비밀번호 :{\" \"}\r\n        <input\r\n          className=\"inputPw\"\r\n          type=\"password\"\r\n          value={userPw}\r\n          onChange={onChangeUserPw}\r\n          onKeyPress={enterkey}\r\n        />\r\n      </div>\r\n      <button className=\"cancelBtn\" onClick={() => props.history.push(\"/\")}>\r\n        취소\r\n      </button>\r\n      <button className=\"loginBtn\" onClick={onClickLogin}>\r\n        로그인\r\n      </button>\r\n      <button className=\"signUpBtn\" onClick={onClickSignUpBtn}>\r\n        회원가입\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./SignUp.css\";\r\n\r\nconst SignUp = (props) => {\r\n  const [userId, setUserId] = useState(\"\");\r\n  const [username, setUserName] = useState(\"\");\r\n  const [userPassword, setUserPassword] = useState(\"\");\r\n  const [userPasswordCheck, setUserPasswordCheck] = useState(\"\");\r\n  const [isIdError, setIsIdError] = useState(false);\r\n  const [isPassWordError, setIsPassWordError] = useState(false);\r\n  const [isPassWordCheckError, setIsPassWordCheckError] = useState(false);\r\n\r\n  const onChangeId = (e) => {\r\n    setUserId(e.target.value);\r\n  };\r\n  const onChangeUserName = (e) => {\r\n    setUserName(e.target.value);\r\n  };\r\n\r\n  const onChangePassword = (e) => {\r\n    setUserPassword(e.target.value);\r\n  };\r\n  const onChangePasswordCheck = (e) => {\r\n    setUserPasswordCheck(e.target.value);\r\n  };\r\n\r\n  const onClickCancelBtn = () => {\r\n    props.history.push(\"/login\");\r\n  };\r\n\r\n  const onClickSignUpBtn = async () => {\r\n    setIsIdError(false);\r\n    setIsPassWordError(false);\r\n    setIsPassWordCheckError(false);\r\n\r\n    const idRegex = new RegExp(\"^[a-zA-Z0-9]{4,12}$\");\r\n    const passwordRegex = new RegExp(\"^(?=.*[0-9])(?=.*[a-zA-z]).{8,15}$\");\r\n    console.log(userId);\r\n    if (!idRegex.test(userId)) {\r\n      setIsIdError(true);\r\n      console.log(userId);\r\n      return;\r\n    }\r\n\r\n    if (!passwordRegex.test(userPassword)) {\r\n      setIsPassWordError(true);\r\n      return;\r\n    }\r\n\r\n    if (userPassword !== userPasswordCheck) {\r\n      setIsPassWordCheckError(true);\r\n      return;\r\n    }\r\n\r\n    axios\r\n      .post(\"http://localhost:8000/api/user\", {\r\n        id: userId,\r\n        name: username,\r\n        role: \"C\",\r\n        password: userPassword,\r\n      })\r\n      .then((response) => {\r\n        console.log(response);\r\n        if (response.data.success) {\r\n          alert(\"회원가입이 완료되었습니다.\");\r\n          props.history.push(\"/login\");\r\n        } else {\r\n          alert(response.data.error.message);\r\n        }\r\n      })\r\n      .catch((Error) => {\r\n        if (!Error.response.data.success) {\r\n          alert(Error.response.data.error.message);\r\n        }\r\n      });\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    console.log(\"handlesubmit\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"signuppage\">\r\n      <h2>회원가입</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <div>\r\n          아이디 <input value={userId} onChange={onChangeId} />\r\n        </div>\r\n        {isIdError ? (\r\n          <span className=\"redText\">\r\n            아이디는 4~12자의 영문 대소문자와 숫자로만 입력해 주세요.\r\n          </span>\r\n        ) : (\r\n          <></>\r\n        )}\r\n        <div>\r\n          닉네임\r\n          <input value={username} onChange={onChangeUserName} />\r\n        </div>\r\n        <div>\r\n          비밀번호{\" \"}\r\n          <input\r\n            type=\"password\"\r\n            value={userPassword}\r\n            onChange={onChangePassword}\r\n          />\r\n        </div>\r\n        {isPassWordError ? (\r\n          <span className=\"redText\">\r\n            비밀번호는 영문, 숫자 조합으로 8~15자리로 입력해 주세요.\r\n          </span>\r\n        ) : (\r\n          <></>\r\n        )}\r\n        <div>\r\n          비밀번호 확인{\" \"}\r\n          <input\r\n            type=\"password\"\r\n            value={userPasswordCheck}\r\n            onChange={onChangePasswordCheck}\r\n          />\r\n        </div>\r\n        {isPassWordCheckError ? (\r\n          <span className=\"redText\">비밀번호가 일치하지 않습니다.</span>\r\n        ) : (\r\n          <></>\r\n        )}\r\n      </form>\r\n\r\n      <button className=\"cancelBtn\" onClick={onClickCancelBtn}>\r\n        취소\r\n      </button>\r\n      <button className=\"signupBtn\" onClick={onClickSignUpBtn}>\r\n        회원가입\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignUp;\r\n","//App.js\r\nimport React from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\nimport PostMainCounselor from \"./pages/post/PostMainCounselor\";\r\nimport PostMainCustomer from \"./pages/post/PostMainCustomer\";\r\nimport PostView from \"./pages/post/PostView\";\r\nimport PostViewAnswer from \"./pages/post/PostViewAnswer\";\r\nimport PostRegistCounselor from \"./pages/post/PostRegistCounselor\";\r\nimport PostRegistCustomer from \"./pages/post/PostRegistCustomer\";\r\nimport Home from \"./pages/Home\";\r\nimport Login from \"./pages/login/Login\";\r\nimport SignUp from \"./pages/login/SignUp\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Route exact path=\"/\" component={Home} />\r\n      <Route exact path=\"/login\" component={Login} />\r\n      <Route exact path=\"/signUp\" component={SignUp} />\r\n      <Route exact path=\"/postMainCounselor\" component={PostMainCounselor} />\r\n      <Route exact path=\"/postMainCustomer\" component={PostMainCustomer} />\r\n      <Route exact path=\"/postView\" component={PostView} />\r\n      <Route exact path=\"/postViewAnswer\" component={PostViewAnswer} />\r\n      <Route\r\n        exact\r\n        path=\"/postRegistCounselor\"\r\n        component={PostRegistCounselor}\r\n      />\r\n      <Route exact path=\"/postRegistCustomer\" component={PostRegistCustomer} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\nreportWebVitals();\n"],"sourceRoot":""}